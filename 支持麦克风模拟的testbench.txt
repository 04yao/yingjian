`timescale 1ns / 1ps

module tb_i2s_mic;

  // ===== 1) 信号定义 =====
  reg        clk;
  reg        rst_n;
  wire       SCK;
  wire       WS;
  reg        SD;
  wire [23:0] audio_data;
  wire       data_valid;

  // ===== 2) 实例化 DUT =====
  i2s_mic uut (
    .clk(clk),
    .rst_n(rst_n),
    .SD(SD),
    .SCK(SCK),
    .WS(WS),
    .audio_data(audio_data),
    .data_valid(data_valid)
  );

  // ===== 3) 时钟生成 =====
  initial clk = 0;
  always #5 clk = ~clk;  // 100 MHz 时钟

  // ===== 4) 复位控制 =====
  initial begin
    rst_n = 0;
    SD    = 0;
    #100;
    rst_n = 1;
  end

  // ===== 5) 预设数据输入（仿真替代麦克风） =====
  reg [23:0] test_data [0:2];  // 多组测试数据
  integer i;

  initial begin
    test_data[0] = 24'hA5A5A5;
    test_data[1] = 24'hB2B2B2;
    test_data[2] = 24'h123456;
  end

  integer bit_cnt = 23;
  integer data_idx = 0;

  always @(negedge SCK) begin
    SD <= test_data[data_idx][bit_cnt];

    if (bit_cnt == 0) begin
      bit_cnt <= 23;
      data_idx <= (data_idx + 1) % 3;  // 循环送入不同测试数据
    end else begin
      bit_cnt <= bit_cnt - 1;
    end
  end

  // ===== 6) 观察数据有效标志和输出 =====
  always @(posedge data_valid) begin
    $display("At time %t: audio_data = %h", $time, audio_data);
  end

  // ===== 7) 结束仿真 =====
  initial begin
    #50000;  // 观察多个数据帧
    $finish;
  end

endmodule
